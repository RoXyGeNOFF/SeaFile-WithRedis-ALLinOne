#!/bin/bash

# C–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Seafile
echo "üê≥ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Seafile —Å Redis –∏ Elasticsearch!"
echo "üì¶ –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–¥–µ–ª–∞–µ—Ç –≤—Å—ë –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è Seafile
mkdir -p seafile-setup
cd seafile-setup

echo "üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
mkdir -p mysql-data redis-data elastic-data

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
cat > .env << EOF
# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
TIME_ZONE=Europe/Moscow

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ MySQL
MYSQL_IMAGE=mysql:5.7
MYSQL_ROOT_PASSWORD=secret_root_password
MYSQL_DATABASE=seafile
MYSQL_USER=seafile
MYSQL_USER_PASSWORD=secret_user_password

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Redis
REDIS_IMAGE=redis:7.0.4-alpine
REDIS_PASSWORD=secret_redis_password

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Elasticsearch
ELASTIC_IMAGE=elasticsearch:7.17.9
ES_JAVA_OPTS=-Xms512m -Xmx512m

# –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–µ—Ç–∏
COMPOSE_PROJECT_NAME=seafile
DOCKER_NETWORK=seafile_net

# –ü—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º
MYSQL_DATA_DIR=./mysql-data
REDIS_DATA_DIR=./redis-data
ELASTIC_DATA_DIR=./elastic-data
EOF

# –°–æ–∑–¥–∞–µ–º docker-compose.yml —Ñ–∞–π–ª
cat > docker-compose.yml << 'EOF'


services:
  mysql:
    image: ${MYSQL_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci","--innodb-buffer-pool-size=256M"]
    environment:
      TZ: ${TIME_ZONE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
    networks:
      - ${DOCKER_NETWORK}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${MYSQL_ROOT_PASSWORD} --silent"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: ${REDIS_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    command: >
      sh -c 'redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"'
    environment:
      TZ: ${TIME_ZONE}
    volumes:
      - ${REDIS_DATA_DIR}:/data
    networks:
      - ${DOCKER_NETWORK}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  elasticsearch:
    image: ${ELASTIC_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "${ES_JAVA_OPTS}"
      TZ: ${TIME_ZONE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    volumes:
      - ${ELASTIC_DATA_DIR}:/usr/share/elasticsearch/data
    networks:
      - ${DOCKER_NETWORK}
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:9200 >/dev/null 2>&1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 30s
    restart: unless-stopped

  seafile:
    image: docker.seadrive.org/seafileltd/seafile-mc:9.0.18
    container_name: ${COMPOSE_PROJECT_NAME}_seafile
    ports:
      - "80:80"
      - "443:443"
    environment:
      TZ: ${TIME_ZONE}
      SEAFILE_SERVER_HOSTNAME: localhost
      SEAFILE_ADMIN_EMAIL: admin@example.com
      SEAFILE_ADMIN_PASSWORD: secret_admin_password
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER_PASSWORD: ${MYSQL_USER_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - ./seahub-data:/shared
    networks:
      - ${DOCKER_NETWORK}
    depends_on:
      - mysql
      - redis
      - elasticsearch
    restart: unless-stopped

networks:
  seafile_net:
    name: seafile_net
    driver: bridge
EOF

echo "‚úÖ –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã!"
echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º Docker Compose..."

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker-compose up -d

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üìä Seafile –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "   http://localhost"
echo ""
echo "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
echo "   Email: admin@example.com"
echo "   –ü–∞—Ä–æ–ª—å: secret_admin_password"
echo ""
echo "üíæ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: $(pwd)"
echo ""
echo "‚öôÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose down"
echo "‚ñ∂Ô∏è –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose up -d"
