version: "3.8"

networks:
  proxy:
    driver: bridge
  seafile:
    driver: bridge

volumes:
  seafile-data:
  db-data:

services:
  # Reverse proxy that will terminate TLS using Let's Encrypt certificates
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.dock.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    environment:
      # (Optional) set to your primary domain to act as the default_server
      - DEFAULT_HOST=${SEAFILE_DOMAIN}

  # Automatic Let's Encrypt companion that issues/renews certificates
  acme-companion:
    image: nginxproxy/acme-companion:latest
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
      # (Optional) set to "staging" while testing to avoid rate limits
      # - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory

  # Database for Seafile
  db:
    image: mariadb:10.11
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_LOG_CONSOLE=true
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - seafile

  # Memcached (recommended by Seafile)

    image: memcached:1.6-alpine
    restart: unless-stopped
    networks:
      - seafile

  # Redis (if your previous stack used Redis, keep it here)
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - seafile

  # The Seafile application (behind the proxy)
  seafile:
    image: seafileltd/seafile-mc:latest
    container_name: seafile
    restart: unless-stopped
    depends_on:
      - db
            - redis
      - nginx-proxy
      - acme-companion
    volumes:
      - seafile-data:/shared
    environment:
      # ------------ Required URLs ------------
      - SEAFILE_SERVER_HOSTNAME=${SEAFILE_DOMAIN}
      - SEAFILE_ADMIN_EMAIL=${SEAFILE_ADMIN_EMAIL}
      - SEAFILE_ADMIN_PASSWORD=${SEAFILE_ADMIN_PASSWORD}
      # ------------ DB connection ------------
      - DB_HOST=db
      - DB_ROOT_PASSWD=${DB_ROOT_PASS}
      - TIME_ZONE=${TIME_ZONE}
      # ------------ Proxy integration ------------
      - VIRTUAL_HOST=${SEAFILE_DOMAIN}
      - LETSENCRYPT_HOST=${SEAFILE_DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - VIRTUAL_PORT=80
    expose:
      - "80"
    networks:
      - proxy
      - seafile
