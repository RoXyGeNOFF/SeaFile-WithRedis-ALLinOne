

services:
  mysql:
    image: ${MYSQL_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    command: ["--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci","--innodb-buffer-pool-size=256M"]
    environment:
      TZ: ${TIME_ZONE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
    networks:
      - seafile_net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${MYSQL_ROOT_PASSWORD} --silent"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: ${REDIS_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    command: >
      sh -c 'redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"'
    environment:
      TZ: ${TIME_ZONE}
    volumes:
      - ${REDIS_DATA_DIR}:/data
    networks:
      - seafile_net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  elasticsearch:
    image: ${ELASTIC_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "${ES_JAVA_OPTS}"
      TZ: ${TIME_ZONE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    volumes:
      - ${ELASTIC_DATA_DIR}:/usr/share/elasticsearch/data
    networks:
      - seafile_net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:9200 >/dev/null 2>&1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 30s
    restart: unless-stopped

# Явное определение сети
networks:
  seafile_net:
    name: seafile_net
    driver: bridge
